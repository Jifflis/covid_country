// Mocks generated by Mockito 5.0.12 from annotations
// in covid/test/cubit/covid_info_cubit_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i5;

import 'package:covid/model/covid_country.dart' as _i3;
import 'package:covid/repository/api.dart' as _i2;
import 'package:covid/repository/covid_repository.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis

class _FakeApiProvider extends _i1.Fake implements _i2.ApiProvider {}

class _FakeCovidCountry extends _i1.Fake implements _i3.CovidCountry {}

/// A class which mocks [CovidRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockCovidRepository extends _i1.Mock implements _i4.CovidRepository {
  MockCovidRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.ApiProvider get api => (super.noSuchMethod(Invocation.getter(#api),
      returnValue: _FakeApiProvider()) as _i2.ApiProvider);
  @override
  set api(_i2.ApiProvider? _api) =>
      super.noSuchMethod(Invocation.setter(#api, _api),
          returnValueForMissingStub: null);
  @override
  _i5.Future<List<_i3.CovidCountry>> getInfectedCountries() =>
      (super.noSuchMethod(Invocation.method(#getInfectedCountries, []),
              returnValue:
                  Future<List<_i3.CovidCountry>>.value(<_i3.CovidCountry>[]))
          as _i5.Future<List<_i3.CovidCountry>>);
  @override
  _i5.Future<_i3.CovidCountry> getInfectedCountry(String? url) =>
      (super.noSuchMethod(Invocation.method(#getInfectedCountry, [url]),
              returnValue: Future<_i3.CovidCountry>.value(_FakeCovidCountry()))
          as _i5.Future<_i3.CovidCountry>);
}
